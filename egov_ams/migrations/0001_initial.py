# Generated by Django 2.1.3 on 2018-11-21 08:16

from django.db import migrations, models
import django.db.models.deletion
import egov_ams.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('egov_hr', '0001_initial'),
        ('egov_core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gsa_asset_code', models.CharField(max_length=15, verbose_name='GSA Asset Code')),
                ('serial_number', models.CharField(max_length=25, verbose_name='Serial Number')),
                ('procurement_date', models.DateField(blank=True, null=True, verbose_name='Procurement Date')),
                ('asset_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Value of Asset')),
                ('asset_image', models.ImageField(default='default.png', upload_to='asset_pics')),
                ('donated', models.BooleanField(default=False, verbose_name='Donated Vehicle ?')),
                ('donation_type', models.CharField(choices=[('Loan', 'Loan'), ('Grant', 'Grant')], max_length=20, verbose_name='Donation Type')),
                ('status', models.CharField(default='Active', max_length=10, verbose_name='Status')),
                ('note', models.TextField(verbose_name='Note')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
                'db_table': 'ams_asset',
            },
        ),
        migrations.CreateModel(
            name='AssetAssigned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_assigned_ref', models.CharField(default=egov_ams.models.get_uniqueId, max_length=20, verbose_name='Asset Assign Reference')),
                ('date_of_transfer', models.DateField(verbose_name='Date of Transfer')),
                ('recorded_on', models.DateTimeField(auto_now_add=True)),
                ('transfer_slip_reference', models.CharField(blank=True, max_length=20, null=True, verbose_name='Transfer Slip / Document Reference')),
                ('status', models.CharField(default='Transfered', max_length=10, verbose_name='Status')),
                ('note', models.TextField(verbose_name='Note')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.Employee')),
            ],
            options={
                'verbose_name': 'Assign An Asset To',
                'verbose_name_plural': ' Assets Assigned',
                'db_table': 'ams_AssetAssigned',
            },
        ),
        migrations.CreateModel(
            name='AssetTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_ref', models.CharField(default=egov_ams.models.get_uniqueId, max_length=20, verbose_name='Transfer Reference')),
                ('asset_transfer_request_ref', models.CharField(max_length=20, verbose_name='Trasfer Request Number')),
                ('date_of_transfer', models.DateField(blank=True, null=True, verbose_name='Transfer Date')),
                ('recorded_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='Transfered', max_length=10, verbose_name='Status')),
                ('note', models.TextField(verbose_name='Note')),
            ],
            options={
                'verbose_name': 'Asset Transfer',
                'verbose_name_plural': 'Asset Transfers',
                'db_table': 'ams_asset_transfer',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_code', models.CharField(max_length=5, verbose_name='Category Code')),
                ('category_name', models.CharField(max_length=150, verbose_name='Category Name')),
            ],
            options={
                'verbose_name': 'Asset Category',
                'verbose_name_plural': 'Categories',
                'db_table': 'ams_category',
            },
        ),
        migrations.CreateModel(
            name='EmployeeAssetAssigned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('AssetAssigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.AssetAssigned')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(default=egov_ams.models.get_uniqueId, max_length=20, verbose_name='Asset Assign Reference')),
                ('inventory_date', models.DateField(verbose_name='Inventory Date')),
                ('name_ministry_agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.MinistryAgency')),
            ],
            options={
                'verbose_name': 'Inventory',
                'verbose_name_plural': 'Inventories',
                'db_table': 'ams_inventory',
            },
        ),
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_state', models.CharField(choices=[('Dermaged', 'Dermaged'), ('Not Found', 'Not Found'), ('Good Order', 'Good Order')], max_length=20, verbose_name='State of Asset')),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('asset_checked', models.BooleanField(default=False)),
                ('log_date', models.DateTimeField(auto_now_add=True)),
                ('current_milage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Current Milage')),
            ],
            options={
                'verbose_name': 'Inventory Detail Log',
                'verbose_name_plural': 'Inventory Logs',
                'db_table': 'ams_inventory_log',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=150, verbose_name='Location')),
                ('county', models.CharField(choices=[('Bomi', 'Bomi County'), ('Bong', 'Bong County'), ('Gbpl', 'Gbarpolu County'), ('Grba', 'Grand Bassa County'), ('Grcm', 'Grand Cape Mount County'), ('Gcmt', 'Grand Gedeh County'), ('Grkr', 'Grand Kru County'), ('Lofa', 'Lofa County'), ('Marg', 'Margibi County'), ('Marl', 'Maryland County'), ('Mont', 'Montserrado County'), ('Nimb', 'Nimba County'), ('Rivc', 'Rivercess County'), ('Rivg', 'River Gee County'), ('Sino', 'Sinoe County')], max_length=5, verbose_name='County')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'ams_location',
            },
        ),
        migrations.CreateModel(
            name='ManfacturerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_number', models.CharField(max_length=150, verbose_name='Model Number')),
            ],
            options={
                'verbose_name': 'Manufacturer Model',
                'verbose_name_plural': 'Models',
                'db_table': 'ams_manufacturer_model',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer_code', models.CharField(help_text='A three letters short code eg: TOY for Toyota', max_length=5, verbose_name='Manfacturer Code')),
                ('manufacturer_name', models.CharField(max_length=150, verbose_name='Manufacturer Name')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
                'db_table': 'ams_manufacturer',
            },
        ),
        migrations.CreateModel(
            name='VehicleInventoryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_state', models.CharField(choices=[('Dermaged', 'Dermaged'), ('Not Found', 'Not Found'), ('Good Order', 'Good Order')], max_length=20, verbose_name='State of Asset')),
                ('comment', models.CharField(blank=True, max_length=200, null=True)),
                ('asset_checked', models.BooleanField(default=False)),
                ('log_date', models.DateTimeField(auto_now_add=True)),
                ('current_milage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Current Milage')),
                ('inventory_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Inventory')),
            ],
            options={
                'verbose_name': 'Vehicle Inventory Detail Log',
                'verbose_name_plural': 'Inventory Logs',
                'db_table': 'ams_vehicle_inventory_log',
            },
        ),
        migrations.CreateModel(
            name='VehicleTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_ref', models.CharField(default=egov_ams.models.get_uniqueId, max_length=20, verbose_name='Transfer Reference')),
                ('asset_transfer_request_ref', models.CharField(max_length=20, verbose_name='Trasfer Request Number')),
                ('date_of_transfer', models.DateField(blank=True, null=True, verbose_name='Transfer Date')),
                ('recorded_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='Transfered', max_length=10, verbose_name='Status')),
                ('note', models.TextField(verbose_name='Note')),
                ('authorized_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.Employee', verbose_name='Authorized By')),
                ('gol_ministry_agency_transfered_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.MinistryAgency', verbose_name='GOL Ministry/Agency Transfer To ?')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Location')),
            ],
            options={
                'verbose_name': 'Vehicle Transfer',
                'verbose_name_plural': 'Vehicle Transfers',
                'db_table': 'ams_vehicle_transfer',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_code', models.CharField(max_length=5, verbose_name='Type Code')),
                ('type_name', models.CharField(max_length=100, verbose_name='Type Name')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='egov_ams.Asset')),
                ('plate_number', models.CharField(max_length=10, verbose_name='Plate Number')),
                ('vin_number', models.CharField(max_length=30, verbose_name='VIN Number')),
                ('current_milage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Current Milage')),
                ('vehicle_color', models.CharField(max_length=20, verbose_name='Vehicle Color')),
                ('engine_size', models.CharField(blank=True, choices=[('1.2', '1.2'), ('2.0', '2.0'), ('3.0', '3.0'), ('4.0', '4.0'), ('5.0', '5.0'), ('HD', 'Heavy Duty')], max_length=10, null=True, verbose_name='Enigine Size')),
                ('transmission', models.CharField(choices=[('Manuel', 'Manuel'), ('Automatic', 'Automatic'), ('Semi Auto', 'Semi Auto')], max_length=10, verbose_name='Transmission')),
                ('fuel_type', models.CharField(choices=[('Gasoline', 'Gas'), ('Diesel', 'Dsl'), ('Electric', 'Ele'), ('Bio-Fuel', 'Bio')], max_length=10, verbose_name='Fuel Type')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.VehicleType')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'ams_vehicle',
            },
            bases=('egov_ams.asset',),
        ),
        migrations.AddField(
            model_name='manfacturermodel',
            name='manufacturer_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Manufacturer'),
        ),
        migrations.AddField(
            model_name='inventorylog',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Asset'),
        ),
        migrations.AddField(
            model_name='inventorylog',
            name='inventory_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Inventory'),
        ),
        migrations.AddField(
            model_name='employeeassetassigned',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Asset'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Asset'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='authorized_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.Employee', verbose_name='Authorized By'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='gol_ministry_agency_transfered_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_hr.MinistryAgency', verbose_name='GOL Ministry/Agency Transfer To ?'),
        ),
        migrations.AddField(
            model_name='assettransfer',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Location'),
        ),
        migrations.AddField(
            model_name='asset',
            name='asset_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Category'),
        ),
        migrations.AddField(
            model_name='asset',
            name='model_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.ManfacturerModel'),
        ),
        migrations.AddField(
            model_name='asset',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='egov_core.Partner'),
        ),
        migrations.AddField(
            model_name='vehicletransfer',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Vehicle'),
        ),
        migrations.AddField(
            model_name='vehicleinventorylog',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='egov_ams.Vehicle'),
        ),
        migrations.AlterUniqueTogether(
            name='inventorylog',
            unique_together={('inventory_number', 'asset')},
        ),
        migrations.AlterUniqueTogether(
            name='vehicleinventorylog',
            unique_together={('inventory_number', 'vehicle')},
        ),
    ]
